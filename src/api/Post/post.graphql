type Query {
  findPost(args: args!): returnType!
}

type Mutation {
  createPost(image: image!, post: post!, hashtag: hashtag): Post!
  deletePost(post_idx: Int!): Int!
  createPost1(
    image_url: String
    post_title: String!
    post_content: String!
    post_location: String
    hashtag_name: String
  ): createPostReturnType!
}

type createPostReturnType {
  status: Int!
  error: String
}

type Post {
  post_idx: Int
  category_idx: Int!
  user_idx: Int!
  image_idx: Int!
  post_title: String!
  post_content: String!
  post_location: String!
  category: Category!
  user: User!
  image: Image!
  hashtag: Hashtag!
  createdAt: Date!
  updatedAt: Date!
}

scalar Date

input image {
  image_url: String
}

input post {
  category_idx: Int!
  user_idx: Int!
  image_idx: Int!
  post_title: String!
  post_content: String!
  post_location: String!
}

input hashtag {
  hashtag_name: String
}

type returnType {
  count: Int!
  rows: [Post!]!
}

type Image {
  image_idx: Int!
  image_url: String!
}

type Hashtag {
  hashtag_idx: Int!
  hashtag_name: String!
}

input args {
  offset: Int!
  limit: Int!
  filter: filter
}

input filter {
  logic: String!
  filters: [filters!]!
}

input filters {
  field: String!
  operator: String!
  value: String!
}
